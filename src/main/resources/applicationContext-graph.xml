<?xml version="1.0" encoding="UTF-8"?>
<!--关系配置完成后，启动服务，通过链接：
http://localhost:8080/policeGXWJ/test?limitLevel=3&maxNode=1000&detail=true&nodeValue=620103197809141011&nodeType=sfzh
访问查询。上面链接的业务意义：查询三层，最大1K个节点，显示详细，开始节点为620103197809141011的身份证 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--标识号名称：身份证，电话号码等等，以供后面复用-->
    <bean id="groupid" class="com.hisign.common.resource.GraphNodeType"/>

    <bean id="ajid" class="com.hisign.common.resource.GraphNodeType"/>

    <bean id="taskid" class="com.hisign.common.resource.GraphNodeType"/>

    <bean id="fkid" class="com.hisign.common.resource.GraphNodeType"/>

    <!--配置关系，假如关系可以从A->B，也可以从B->A的话需要配置两个-->
    <bean class="com.hisign.common.resource.GraphRelation">
        <!-- 假如传入参数的type和VALUE一致则该关系不予查询。 -->
        <!-- 用途1，子专案组查询则删除父关联，父专案组查询则删除子关联 -->
        <property name="typeDelete" value="groupid"/>
        <property name="relationProperties">
            <props>
                <prop key="name">涉及案件</prop>
                <prop key="tableName">T_AJGROUP</prop>
                <prop key="code">pgroup2aj</prop>
            </props>
        </property>
        <property name="relationLabel" value="group2aj"/>
        <!--从out到in-->
        <property name="outLabel" ref="groupid"/>
        <property name="outId" value="PGROUPID"/>
        <property name="outProperties">
            <props>
                <!--1，假如需要数据库翻译则KEY首字母必须大写，数据库找不到则直接返回VALUE。-->
                <!--2，假如不需要数据库翻译需要直接返回VALUE则KEY首字母需小写-->
                <prop key="name">GROUPNAME</prop>
            </props>
        </property>
        <property name="inLabel" ref="ajid"/>
        <property name="inId" value="AJID"/>
        <property name="inProperties">
            <props>
                <!--1，假如需要数据库翻译则KEY首字母必须大写，数据库找不到则直接返回VALUE。-->
                <!--2，假如不需要数据库翻译需要直接返回VALUE则KEY首字母需小写-->
                <prop key="name">AJMC</prop>
            </props>
        </property>
        <!--关系语句-->
        <property name="relationSql">
            <value>select (select GROUPNAME from T_GROUP g where g.id = a.pgroupid) as GROUPNAME,
                a.*
                from (select t.groupid,
                nvl(t.pgroupid, t.groupid) as pgroupid,
                (select AJMC from B_ASJ_AJ a where a.id = t.AJID) as AJMC,
                t.ajid
                from T_AJGROUP t) a where 1=1
            </value>
        </property>
    </bean>

    <!--配置关系，假如关系可以从A->B，也可以从B->A的话需要配置两个-->
    <bean class="com.hisign.common.resource.GraphRelation">
        <!-- 假如传入参数的type和VALUE一致则该关系不予查询。 -->
        <!-- 用途1，子专案组查询则删除父关联，父专案组查询则删除子关联 -->
        <property name="typeDelete" value="pgroupid"/>
        <property name="relationProperties">
            <props>
                <prop key="name">涉及案件</prop>
                <prop key="tableName">T_AJGROUP</prop>
                <prop key="code">group2aj</prop>
            </props>
        </property>
        <property name="relationLabel" value="group2aj"/>
        <!--从out到in-->
        <property name="outLabel" ref="groupid"/>
        <property name="outId" value="GROUPID"/>
        <property name="outProperties">
            <props>
                <!--1，假如需要数据库翻译则KEY首字母必须大写，数据库找不到则直接返回VALUE。-->
                <!--2，假如不需要数据库翻译需要直接返回VALUE则KEY首字母需小写-->
                <prop key="name">GROUPNAME</prop>
            </props>
        </property>
        <property name="inLabel" ref="ajid"/>
        <property name="inId" value="AJID"/>
        <property name="inProperties">
            <props>
                <!--1，假如需要数据库翻译则KEY首字母必须大写，数据库找不到则直接返回VALUE。-->
                <!--2，假如不需要数据库翻译需要直接返回VALUE则KEY首字母需小写-->
                <prop key="name">AJMC</prop>
            </props>
        </property>
        <!--关系语句-->
        <property name="relationSql">
            <value>select t.*,(select GROUPNAME from T_GROUP g where g.id = t.groupid) as GROUPNAME,(select AJMC from
                B_ASJ_AJ a where a.id = t.AJID) as AJMC from T_AJGROUP t where 1=1
            </value>
        </property>
    </bean>

    <!--配置关系，假如关系可以从A->B，也可以从B->A的话需要配置两个-->
    <bean class="com.hisign.common.resource.GraphRelation">
        <!-- 假如传入参数的type和VALUE一致则该关系不予查询。 -->
        <!-- 用途1，子专案组查询则删除父关联，父专案组查询则删除子关联 -->
        <property name="typeDelete" value="groupid"/>
        <property name="relationProperties">
            <props>
                <prop key="name">新任务</prop>
                <prop key="tableName">T_TASK</prop>
                <prop key="code">pgroup2task</prop>
            </props>
        </property>
        <property name="relationLabel" value="group2task"/>
        <!--从out到in-->
        <property name="outLabel" ref="groupid"/>
        <property name="outId" value="PGROUPID"/>
        <property name="outProperties">
            <props>
                <!--1，假如需要数据库翻译则KEY首字母必须大写，数据库找不到则直接返回VALUE。-->
                <!--2，假如不需要数据库翻译需要直接返回VALUE则KEY首字母需小写-->
                <prop key="name">GROUPNAME</prop>
            </props>
        </property>
        <property name="inLabel" ref="taskid"/>
        <property name="inId" value="ID"/>
        <property name="inProperties">
            <props>
                <!--1，假如需要数据库翻译则KEY首字母必须大写，数据库找不到则直接返回VALUE。-->
                <!--2，假如不需要数据库翻译需要直接返回VALUE则KEY首字母需小写-->
                <prop key="name">TASK_STR</prop>
                <prop key="taskReceiveUserId">JSR</prop>
                <prop key="taskCreatorUserId">FQR</prop>
                <prop key="taskCreateTime">FQ_TIME</prop>
                <prop key="taskStatus">TASKSTATUS</prop>
            </props>
        </property>
        <!--关系语句-->
        <property name="relationSql">
            <value>
                select *
                from (select g.id as groupid,
                nvl(g.pgroupid,g.id) as pgroupid,
                g.GROUPNAME as GROUPNAME,
                t.id,
                substr(t.TASK_CONTENT,0,15) || '@' || to_char(t.CREATETIME,'yyyy-mm-dd hh24:mi:ss') as TASK_STR,
                t.fqr,
                t.jsr,
                case
                when t.FKJZ_TIME > sysdate and t.FKZT = '0' then
                Translate('2' USING NCHAR_CS)
                else
                t.FKZT
                end as taskstatus,
                to_char(t.FQ_TIME,'yyyy-mm-dd hh24:mi:ss') as FQ_TIME
                from T_GROUP g
                left join v_t_task_graphshow t
                on g.id = t.pgroupid
                and t.bcrwid is null
                and t.fkid is null
                where 1 = 1) a
                where 1 = 1
            </value>
        </property>
    </bean>

    <!--配置关系，假如关系可以从A->B，也可以从B->A的话需要配置两个-->
    <bean class="com.hisign.common.resource.GraphRelation">
        <!-- 假如传入参数的type和VALUE一致则该关系不予查询。 -->
        <!-- 用途1，子专案组查询则删除父关联，父专案组查询则删除子关联 -->
        <property name="typeDelete" value="pgroupid"/>
        <property name="relationProperties">
            <props>
                <prop key="name">新任务</prop>
                <prop key="tableName">T_TASK</prop>
                <prop key="code">group2task</prop>
            </props>
        </property>
        <property name="relationLabel" value="group2task"/>
        <!--从out到in-->
        <property name="outLabel" ref="groupid"/>
        <property name="outId" value="GROUPID"/>
        <property name="outProperties">
            <props>
                <!--1，假如需要数据库翻译则KEY首字母必须大写，数据库找不到则直接返回VALUE。-->
                <!--2，假如不需要数据库翻译需要直接返回VALUE则KEY首字母需小写-->
                <prop key="name">GROUPNAME</prop>
            </props>
        </property>
        <property name="inLabel" ref="taskid"/>
        <property name="inId" value="ID"/>
        <property name="inProperties">
            <props>
                <!--1，假如需要数据库翻译则KEY首字母必须大写，数据库找不到则直接返回VALUE。-->
                <!--2，假如不需要数据库翻译需要直接返回VALUE则KEY首字母需小写-->
                <prop key="name">TASK_STR</prop>
                <prop key="taskReceiveUserId">JSR</prop>
                <prop key="taskCreatorUserId">FQR</prop>
                <prop key="taskCreateTime">FQ_TIME</prop>
                <prop key="taskStatus">TASKSTATUS</prop>
            </props>
        </property>
        <!--关系语句-->
        <property name="relationSql">
            <value>
                select *
                from (select
                g.id as groupid,
                nvl(g.pgroupid,g.id) as pgroupid,
                g.GROUPNAME as GROUPNAME,
                t.id,
                substr(t.TASK_CONTENT,0,15) || '@' || to_char(t.CREATETIME,'yyyy-mm-dd hh24:mi:ss') as TASK_STR,
                t.fqr,
                t.jsr,
                case
                when t.FKJZ_TIME > sysdate and t.FKZT = '0' then
                Translate('2' USING NCHAR_CS)
                else
                t.FKZT
                end as taskstatus,
                to_char(t.FQ_TIME,'yyyy-mm-dd hh24:mi:ss') as FQ_TIME
                from T_GROUP g
                left join v_t_task_graphshow t
                on g.id = t.groupid
                and t.bcrwid is null
                and t.fkid is null
                where 1 = 1) a
                where 1 = 1
            </value>
        </property>
    </bean>

    <!--配置关系，假如关系可以从A->B，也可以从B->A的话需要配置两个-->
    <bean class="com.hisign.common.resource.GraphRelation">
        <property name="relationProperties">
            <props>
                <prop key="name">反馈</prop>
                <prop key="tableName">T_TASK_FK</prop>
                <prop key="code">task2fk</prop>
            </props>
        </property>
        <property name="relationLabel" value="task2fk"/>
        <!--从out到in-->
        <property name="outLabel" ref="taskid"/>
        <property name="outId" value="TASKID"/>
        <property name="outProperties">
            <props>
                <!--1，假如需要数据库翻译则KEY首字母必须大写，数据库找不到则直接返回VALUE。-->
                <!--2，假如不需要数据库翻译需要直接返回VALUE则KEY首字母需小写-->
                <prop key="name">PTASK_STR</prop>
                <prop key="taskReceiveUserId">JSR</prop>
                <prop key="taskCreatorUserId">FQR</prop>
                <prop key="taskCreateTime">FQ_TIME</prop>
                <prop key="taskStatus">TASKSTATUS</prop>
            </props>
        </property>
        <property name="inLabel" ref="fkid"/>
        <property name="inId" value="ID"/>
        <property name="inProperties">
            <props>
                <!--1，假如需要数据库翻译则KEY首字母必须大写，数据库找不到则直接返回VALUE。-->
                <!--2，假如不需要数据库翻译需要直接返回VALUE则KEY首字母需小写-->
                <prop key="name">FKSTR</prop>
                <prop key="feedBackUserId">FKR</prop>
            </props>
        </property>
        <!--关系语句-->
        <property name="relationSql">
            <value>
                select *
                from (select
                g.groupid,
                nvl(g.pgroupid,g.groupid) as pgroupid,
                g.id as taskid,
                substr(g.TASK_CONTENT,0,15) || '@' || to_char(g.CREATETIME,'yyyy-mm-dd hh24:mi:ss') as PTASK_STR,
                g.FQR,
                g.JSR,
                case
                when g.FKJZ_TIME > sysdate and g.FKZT = '0' then
                Translate('2' USING NCHAR_CS)
                else
                g.FKZT
                end as taskstatus,
                to_char(g.FQ_TIME,'yyyy-mm-dd hh24:mi:ss') as FQ_TIME,
                t.id,
                t.fkr,
                substr(t.FKXS,0,15) || '@' || to_char(t.CREATETIME,'yyyy-mm-dd hh24:mi:ss') as FKSTR
                from v_t_task_graphshow g
                left join T_TASK_FK t
                on t.taskid = g.ID
                where 1 = 1) a
                where 1 = 1
            </value>
        </property>
    </bean>

    <!--配置关系，假如关系可以从A->B，也可以从B->A的话需要配置两个-->
    <bean class="com.hisign.common.resource.GraphRelation">
        <property name="relationProperties">
            <props>
                <prop key="name">追加任务</prop>
                <prop key="tableName">T_TASK</prop>
                <prop key="code">fk2task</prop>
            </props>
        </property>
        <property name="relationLabel" value="fk2task"/>
        <!--从out到in-->
        <property name="outLabel" ref="fkid"/>
        <property name="outId" value="FKID"/>
        <property name="outProperties">
            <props>
                <!--1，假如需要数据库翻译则KEY首字母必须大写，数据库找不到则直接返回VALUE。-->
                <!--2，假如不需要数据库翻译需要直接返回VALUE则KEY首字母需小写-->
                <prop key="name">FKSTR</prop>
                <prop key="feedBackUserId">FKR</prop>
            </props>
        </property>
        <property name="inLabel" ref="taskid"/>
        <property name="inId" value="ID"/>
        <property name="inProperties">
            <props>
                <!--1，假如需要数据库翻译则KEY首字母必须大写，数据库找不到则直接返回VALUE。-->
                <!--2，假如不需要数据库翻译需要直接返回VALUE则KEY首字母需小写-->
                <prop key="name">TASK_STR</prop>
                <prop key="taskReceiveUserId">JSR</prop>
                <prop key="taskCreatorUserId">FQR</prop>
                <prop key="taskCreateTime">FQ_TIME</prop>
                <prop key="taskStatus">TASKSTATUS</prop>
            </props>
        </property>
        <!--关系语句-->
        <property name="relationSql">
            <value>
                select *
                from (select
                g.groupid,
                nvl(g.pgroupid,g.groupid) as pgroupid,
                g.id as fkid,
                substr(g.FKXS,0,15) || '@' || to_char(g.CREATETIME,'yyyy-mm-dd hh24:mi:ss') as FKSTR,
                g.fkr,
                t.id,
                substr(t.TASK_CONTENT,0,15) || '@' || to_char(t.CREATETIME,'yyyy-mm-dd hh24:mi:ss') as TASK_STR,
                t.FQR,
                t.JSR,
                case
                when t.FKJZ_TIME > sysdate and t.FKZT = '0' then
                Translate('2' USING NCHAR_CS)
                else
                t.FKZT
                end as taskstatus,
                to_char(t.FQ_TIME,'yyyy-mm-dd hh24:mi:ss') as FQ_TIME
                from T_TASK_FK g
                left join v_t_task_graphshow t
                on g.id = t.FKID
                where 1=1) a
                where 1 = 1
            </value>
        </property>
    </bean>

    <!--配置关系，假如关系可以从A->B，也可以从B->A的话需要配置两个-->
    <bean class="com.hisign.common.resource.GraphRelation">
        <property name="relationProperties">
            <props>
                <prop key="name">任务补充</prop>
                <prop key="tableName">T_TASK</prop>
                <prop key="code">task2task</prop>
            </props>
        </property>
        <property name="relationLabel" value="task2task"/>
        <!--从out到in-->
        <property name="outLabel" ref="taskid"/>
        <property name="outId" value="BCRWID"/>
        <property name="outProperties">
            <props>
                <!--1，假如需要数据库翻译则KEY首字母必须大写，数据库找不到则直接返回VALUE。-->
                <!--2，假如不需要数据库翻译需要直接返回VALUE则KEY首字母需小写-->
                <prop key="name">PTASK_STR</prop>
                <prop key="taskReceiveUserId">PJSR</prop>
                <prop key="taskCreatorUserId">PFQR</prop>
                <prop key="taskCreateTime">PFQ_TIME</prop>
                <prop key="taskStatus">PTASKSTATUS</prop>
            </props>
        </property>
        <property name="inLabel" ref="taskid"/>
        <property name="inId" value="ID"/>
        <property name="inProperties">
            <props>
                <!--1，假如需要数据库翻译则KEY首字母必须大写，数据库找不到则直接返回VALUE。-->
                <!--2，假如不需要数据库翻译需要直接返回VALUE则KEY首字母需小写-->
                <prop key="name">TASK_STR</prop>
                <prop key="taskReceiveUserId">JSR</prop>
                <prop key="taskCreatorUserId">FQR</prop>
                <prop key="taskCreateTime">FQ_TIME</prop>
                <prop key="taskStatus">TASKSTATUS</prop>
            </props>
        </property>
        <!--关系语句-->
        <property name="relationSql">
            <value>
                select *
                from (select
                t.GROUPID,
                nvl(t.pgroupid,t.groupid) as pgroupid,
                t.id as bcrwid,
                substr(t.TASK_CONTENT,0,15) || '@' || to_char(t.CREATETIME,'yyyy-mm-dd hh24:mi:ss') as PTASK_STR,
                t.FQR as pfqr,
                t.JSR as pjsr,
                case
                when t.FKJZ_TIME > sysdate and t.FKZT = '0' then
                Translate('2' USING NCHAR_CS)
                else
                t.FKZT
                end as ptaskstatus,
                to_char(t.FQ_TIME,'yyyy-mm-dd hh24:mi:ss') as pfq_time,
                g.id,
                substr(g.TASK_CONTENT,0,15) || '@' || to_char(g.CREATETIME,'yyyy-mm-dd hh24:mi:ss') as TASK_STR,
                g.fqr,
                g.jsr,
                case
                when g.FKJZ_TIME > sysdate and g.FKZT = '0' then
                Translate('2' USING NCHAR_CS)
                else
                g.FKZT
                end as taskstatus,
                to_char(g.FQ_TIME,'yyyy-mm-dd hh24:mi:ss') as FQ_TIME
                from v_t_task_graphshow t
                right join v_t_task_graphshow g
                on g.id = t.BCRWID
                where 1=1) a
                where 1 = 1
            </value>
        </property>
    </bean>

</beans>