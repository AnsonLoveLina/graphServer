<?xml version="1.0" encoding="UTF-8"?>
<!--关系配置完成后，启动服务，通过链接：
http://localhost:8080/policeGXWJ/test?limitLevel=3&maxNode=1000&detail=true&nodeValue=620103197809141011&nodeType=sfzh
访问查询。上面链接的业务意义：查询三层，最大1K个节点，显示详细，开始节点为620103197809141011的身份证 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--标识号名称：身份证，电话号码等等，以供后面复用-->
    <bean id="groupid" class="com.hisign.common.resource.GraphNodeType"/>

    <bean id="ajid" class="com.hisign.common.resource.GraphNodeType"/>

    <bean id="taskid" class="com.hisign.common.resource.GraphNodeType"/>

    <bean id="fkid" class="com.hisign.common.resource.GraphNodeType"/>

    <!--配置关系，假如关系可以从A->B，也可以从B->A的话需要配置两个-->
    <bean class="com.hisign.common.resource.GraphRelation">
        <property name="relationProperties">
            <props>
                <prop key="name">涉及案件</prop>
                <prop key="tableName">T_AJGROUP</prop>
                <prop key="code">group2aj</prop>
            </props>
        </property>
        <property name="relationLabel" value="group2aj"/>
        <!--从out到in-->
        <property name="outLabel" ref="groupid"/>
        <property name="outId" value="GROUPID"/>
        <property name="outProperties">
            <props>
                <!--1，假如需要数据库翻译则KEY首字母必须大写，数据库找不到则直接返回VALUE。-->
                <!--2，假如不需要数据库翻译需要直接返回VALUE则KEY首字母需小写-->
                <prop key="name">GROUPNAME</prop>
            </props>
        </property>
        <property name="inLabel" ref="ajid"/>
        <property name="inId" value="AJID"/>
        <property name="inProperties">
            <props>
                <!--1，假如需要数据库翻译则KEY首字母必须大写，数据库找不到则直接返回VALUE。-->
                <!--2，假如不需要数据库翻译需要直接返回VALUE则KEY首字母需小写-->
                <prop key="name">AJMC</prop>
            </props>
        </property>
        <!--关系语句-->
        <property name="relationSql">
            <value>select * from(select t.group_id as GROUPID,
                t.case_id as AJID,
                (select g.group_name from T_GROUP g where g.id = t.group_id) as GROUPNAME,
                (select AJMC from T_CASE a where a.id = t.case_id) as AJMC
                from T_CASE_GROUP t
                where 1 = 1) a where 1=1
            </value>
        </property>
    </bean>

    <!--配置关系，假如关系可以从A->B，也可以从B->A的话需要配置两个-->
    <bean class="com.hisign.common.resource.GraphRelation">
        <property name="relationProperties">
            <props>
                <prop key="name">新任务</prop>
                <prop key="tableName">T_TASK</prop>
                <prop key="code">group2task</prop>
            </props>
        </property>
        <property name="relationLabel" value="group2task"/>
        <!--从out到in-->
        <property name="outLabel" ref="groupid"/>
        <property name="outId" value="GROUPID"/>
        <property name="outProperties">
            <props>
                <!--1，假如需要数据库翻译则KEY首字母必须大写，数据库找不到则直接返回VALUE。-->
                <!--2，假如不需要数据库翻译需要直接返回VALUE则KEY首字母需小写-->
                <prop key="name">GROUPNAME</prop>
            </props>
        </property>
        <property name="inLabel" ref="taskid"/>
        <property name="inId" value="ID"/>
        <property name="inProperties">
            <props>
                <!--1，假如需要数据库翻译则KEY首字母必须大写，数据库找不到则直接返回VALUE。-->
                <!--2，假如不需要数据库翻译需要直接返回VALUE则KEY首字母需小写-->
                <prop key="name">TASK_STR</prop>
                <prop key="taskContent">TASK_CONTENT</prop>
            </props>
        </property>
        <!--关系语句-->
        <property name="relationSql">
            <value>
                select *
                from (select g.id as groupid,
                g.group_name as GROUPNAME,
                t.id,
                substr(t.TASK_CONTENT, 0, 15) || '@' ||
                to_char(t.create_time, 'yyyy-mm-dd hh24:mi:ss') as TASK_STR,
                t.task_content as TASK_CONTENT
                from T_GROUP g
                left join t_task t
                on g.id = t.group_id
                where 1 = 1) a
                where 1 = 1
            </value>
        </property>
    </bean>

    <!--配置关系，假如关系可以从A->B，也可以从B->A的话需要配置两个-->
    <bean class="com.hisign.common.resource.GraphRelation">
        <property name="relationProperties">
            <props>
                <prop key="name">反馈</prop>
                <prop key="tableName">T_TASK_FK</prop>
                <prop key="code">task2fk</prop>
            </props>
        </property>
        <property name="relationLabel" value="task2fk"/>
        <!--从out到in-->
        <property name="outLabel" ref="taskid"/>
        <property name="outId" value="TASKID"/>
        <property name="outProperties">
            <props>
                <!--1，假如需要数据库翻译则KEY首字母必须大写，数据库找不到则直接返回VALUE。-->
                <!--2，假如不需要数据库翻译需要直接返回VALUE则KEY首字母需小写-->
                <prop key="name">TASK_STR</prop>
                <prop key="taskContent">TASK_CONTENT</prop>
            </props>
        </property>
        <property name="inLabel" ref="fkid"/>
        <property name="inId" value="ID"/>
        <property name="inProperties">
            <props>
                <!--1，假如需要数据库翻译则KEY首字母必须大写，数据库找不到则直接返回VALUE。-->
                <!--2，假如不需要数据库翻译需要直接返回VALUE则KEY首字母需小写-->
                <prop key="name">FEEDBACK_STR</prop>
                <prop key="feedbackContent">FEEDBACK_CONTENT</prop>
            </props>
        </property>
        <!--关系语句-->
        <property name="relationSql">
            <value>
                select *
                from (select g.group_id as groupid,
                g.id as taskid,
                substr(g.TASK_CONTENT, 0, 15) || '@' ||
                to_char(g.create_time, 'yyyy-mm-dd hh24:mi:ss') as TASK_STR,
                g.task_content,
                t.id,
                substr(t.feedback_content, 0, 15) || '@' ||
                to_char(t.create_time, 'yyyy-mm-dd hh24:mi:ss') as FEEDBACK_STR,
                t.feedback_content
                from T_TASK g
                left join T_TASK_FEEDBACK t
                on t.task_id = g.ID
                where 1 = 1) a
                where 1 = 1
            </value>
        </property>
    </bean>

</beans>